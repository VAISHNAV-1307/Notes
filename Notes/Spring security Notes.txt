Spring security Notes ->

when you are unauthenticated you get the 401 with http status unauthorized
when you are unauthorized you get the 403 with unauthenticated http status


Filter chain structure ->

AuthenticationFilter -> AuthorizationFilter -> controller -> Authorizarion -> Method 
		|			                |							|
	SecurityContext ---------------------------------------------


1. If authentication is correct we will end up by putting some information in security context
2. So security context is a place where information about who has been authenticated is stored
3. Then this information is used for authorization to apply aothorization rules\


Configurations ->

1. SecurityFilterChain() ->
in this bean we take HttpSecurity as a input object build it with according to our requirment and then return this object



		Authentication			-> Authenticaition starts with authentication 
			|
		Authentication Manager		-> Then further authentication filter calls an manager called authentication manager
			|
		Authentication provider	-> Then manager will use an implementation of logic which is done in authentication provider
			|
		Security Context			-> Then after successfull authentication everything goes in a security context


2. UserDetailService ->
	It is a componenet which manages the user credentials

3. Password encoder ->
	It is used for encoding password or stored in secured way



authorities 
read, write, delete, access, execute

roles
ADMIN, MANAGER, USER, CLIENT, ADMINISTRATOR 


Both of this have same implimatation they have only one interface behind the scene called grantedAuthority
























